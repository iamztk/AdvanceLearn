ajax中的请求方式：
	GET、POST、PUT、DELETE、HEAD
	
HTTP METHOD: 客户端向服务器发送请求的方式。其实从本质来说，请求的方式之间是没有任何区别的，不管是哪一种方式，都可以向
服务器传递数据，也可以从服务器获取到数据。

1、GET
	一般应用于从服务器获取数据(给服务器的数据少，从服务器拿的数据多)，一般使用URL问号传参的方式向服务器传递内容。
	/getList?id=1&name='张三'

2、POST
	一般应用于向服务器推送数据(给服务器的多，从服务器拿下来的少)，一般使用请求主体的方式向服务器传递内容。
	type: 'POST'
	data: {
			id：1,
			name: "张三"
		  }
		  
3、PUT
	一般应用于给服务器上增加资源文件(上传图片功能)，向服务器传输内容方式与POST一致。
	
4、DELETE
	一般应用于从服务器上删除资源文件，向服务器传输内容方式与get一致。
	
5、HEAD
	一般应用于只获取服务器的响应头信息，向服务器传输内容方式与get一致。
	
主流应用还是GET和POST:
GET 和 POST 的区别：
	A、大小区别
		GET请求传递给服务器的内容存在大小限制，而POST理论上是没有限制的。
		原因：GET通过URL传参给服务器，每个浏览器对URL的长度都由限制，谷歌8KB, 火狐7KB，IE2KB,
所以最多传2KB(2048个字节，一个汉字两个字节，一千多个汉字)，如果URL的长度超过了限制，浏览器会
把超出部分截取。
		POST理论上没有限制，但是一般控制在2M，具体也取决于服务器的设置和内存的大小
		
		其实：http对于URL长度是没有限制的，URL长度限制主要来自于浏览器和服务器，
		为什么需要设置这个限制？
			服务器：需要处理较长的URL需要消耗比较多的资源，为了性能和安全（防止恶意构造长的URL来共计）考虑，
		所以会给URL长度加限制。
		
	
	B、缓存问题
		GET请求会出现缓存（这个缓存不一定是304）
			常见的是ajax请求过一次以后，以后的相同 url 的 get 请求：
				case 1 有时返回304，有时返回200;
				case 2 有时无论后台数据是否变化始终返回304，有时却始终返回200；
				同一套代码在不同浏览器间结果不同；
			304状态码或许不应该认为是一种错误，而是对客户端有缓存情况下服务端的一种响应。
				当是从缓存中获取数据时，返回的就是304的状态码
				
		POST请求是没有缓存的
		
		在项目中GET请求一般不会让其出现缓存，于是应该在URL的末尾追加一个随机数清除缓存。
			/getList?id=1&name='张三'&_=''+Math.random()
	
	C、安全问题
		一般来说GET不安全，而POST相对安全一些
		原因：
		
	D、GET产生一个TCP数据包; POST产生两个TCP数据包
		对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器相应200
		而对于POST，浏览器会先发送header，服务器相应100continue， 浏览器再发送data，服务器相应200 ok。
		
	所以，一般来说POST时间上消耗的要多一点，GET比POST更有效
	两次包的TCP在验证数据包完整性上，有非常大的优点
	
