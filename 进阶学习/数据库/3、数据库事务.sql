数据库的四大特性（ACID）:

	1、如果一个数据库声称支持事务的操作，那么该数据库必须要具备以下四个特性：
	
		a、原子性（Atomicity）
			指事务包含的所有操作，要么全部成功，要么全部失败回滚。
			
		b、一致性（Consistency）
			事务执行前和执行后必须处于一致状态。
			例如转账前后金额的 总数必须保持一致
			
		c、隔离性（Isolation）
			隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启事务，不能被其他事务的操作所干扰，多个并发
		事务之间要相互隔离。
			既要达到这一种效果：对于任意两个并发的事务T1和T2，在事务T1看来，T2要么在T1开始之前结束，要么在T1结束之后开始，
		这样每个事务都感觉不到有其他事务在并发执行。
				
		d、持久性（Durability）
			持久性是指一个事物一旦被提交了，那么对数据库中的数据的改变就是永久性的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。
		
		

	2、在不考虑隔离性的情况下，数据库的数据访问会发生以下几种问题：
		a、脏读
			指一个事物在处理过程中读到了另一个事物未提交的数据。--读取了别的事务未提交的数据
		b、不可重复读
			在一个事物范围内多次查询同一数据，但是返回的结果确不一致。这是因为查询间隔，被另一个事物修改并提交了。 --读取了别的事务已提交的数据
		c、虚读(幻读)
			事务A对表数据中的某一列做修改操作，从‘1’修改到‘2’， 而事务B也对该表做了插入操作，插入了一条数据，‘1’， 此时操作事务A的用户
		再去查看数据时，发现有一行数据没有被改变，就像发生了幻觉一样。
			【幻读：不隔离新增数据】
		
		针对这三种情况，MYSQL数据库为我们提供了四种隔离级别：
			a、Read uncommitted(读未提交)：最低级别，任何情况都无法保证。
			
			b、Read Committed(读已提交)：可避免脏读的发生。
			
			c、Repeatable Read(可重复读)：可避免脏读、不可重复读的发生。
			
			d、Serializable(串行化):可避免脏读、不可重复读、幻读的发生。

			以上四种隔离级别最高的是Serializable,最低的是Read unCommitted。当然隔离级别越高，相应的效率就越低。像Serializable这种方式，就是以
		锁表来达到相应功能的。所以在选取隔离级别的时候，应根据实际情况。
			Mysql中默认的事务隔离级别就是：Repeatable Read（可重复读）。
			Mysql支持上述的四种隔离级别，默认为Repeatable Read（可重复读）。
			Oracle只支持两种：Serializable(串行化), Read Committed（读已提交）， 默认为 Read Committed（读已提交）。
			
	3、如何保证持久性
		事务会保证数据不会丢，当数据库因不可抗拒的原因奔溃后重启，它会保证：
			a、成功提交的事务，数据会保存到磁盘，
			b、未提交的事务，相应的数据会回滚。		
		
		数据库通过事务日志来达到这一目标：事务的每一个操作（增/删/改）都会产生一条日志，内容组成大概如下：
			LSN：一个按时间顺序分配的唯一日志序列号，靠后的操作的LSN比靠前的大。
			TransID：产生操作的事务ID。
			PageID: 被修改的数据在磁盘上的位置，数据以页为单位存储。
			PrevLSN：同一事务产生的上一条日志记录的指针。
			UNDO：取消本次操作的方法，按照此方法回滚。
			REDO：重复本次操作的方法，如有必要，重复此方法保证操作成功。
		
			
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		